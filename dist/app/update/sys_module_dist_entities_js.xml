<?xml version="1.0"?>
<record_update>
  <sys_module action="INSERT_OR_UPDATE">
    <sys_scope>a014653c83ef821036c659d0deaad39c</sys_scope>
    <path>x_1439397_inver/test-inversify/0.0.1/dist/entities.js</path>
    <external_source>false</external_source>
    <content><![CDATA[var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { injectable, inject } from "inversify";
import "./Reflect.js";
import { TYPES } from "./types.js";
let Katana = class Katana {
    hit() {
        return "cut!";
    }
};
Katana = __decorate([
    injectable()
], Katana);
let Shuriken = class Shuriken {
    throw() {
        return "hit!";
    }
};
Shuriken = __decorate([
    injectable()
], Shuriken);
let Ninja = class Ninja {
    constructor(katana, shuriken) {
        this._katana = katana;
        this._shuriken = shuriken;
    }
    fight() { return this._katana.hit(); }
    sneak() { return this._shuriken.throw(); }
};
Ninja = __decorate([
    injectable(),
    __param(0, inject(TYPES.Weapon)),
    __param(1, inject(TYPES.ThrowableWeapon)),
    __metadata("design:paramtypes", [Object, Object])
], Ninja);
export { Ninja, Katana, Shuriken };
//# sourceMappingURL=entities.js.map]]></content>
  </sys_module>
</record_update>